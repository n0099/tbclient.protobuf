// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: UserDeps/CreationData.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace TbClient.UserDeps {

  /// <summary>Holder for reflection information generated from UserDeps/CreationData.proto</summary>
  public static partial class CreationDataReflection {

    #region Descriptor
    /// <summary>File descriptor for UserDeps/CreationData.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CreationDataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChtVc2VyRGVwcy9DcmVhdGlvbkRhdGEucHJvdG8SEXRiQ2xpZW50LnVzZXJE",
            "ZXBzItQBCgxDcmVhdGlvbkRhdGESEgoKdmlld19jb3VudBgBIAEoBRITCgth",
            "Z3JlZV9jb3VudBgCIAEoBRIYChB2aWV3X2NvdW50X3RyZW5kGAMgASgFEhkK",
            "EWFncmVlX2NvdW50X3RyZW5kGAQgASgFEhUKDWNvbW1lbnRfY291bnQYBSAB",
            "KAUSFQoNY29tbWVudF90cmVuZBgGIAEoBRIYChB2YWxpZF9wbGF5X2NvdW50",
            "GAcgASgFEh4KFnZhbGlkX3BsYXlfY291bnRfdHJlbmQYCCABKAViBnByb3Rv",
            "Mw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::TbClient.UserDeps.CreationData), global::TbClient.UserDeps.CreationData.Parser, new[]{ "ViewCount", "AgreeCount", "ViewCountTrend", "AgreeCountTrend", "CommentCount", "CommentTrend", "ValidPlayCount", "ValidPlayCountTrend" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class CreationData : pb::IMessage<CreationData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreationData> _parser = new pb::MessageParser<CreationData>(() => new CreationData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreationData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TbClient.UserDeps.CreationDataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreationData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreationData(CreationData other) : this() {
      viewCount_ = other.viewCount_;
      agreeCount_ = other.agreeCount_;
      viewCountTrend_ = other.viewCountTrend_;
      agreeCountTrend_ = other.agreeCountTrend_;
      commentCount_ = other.commentCount_;
      commentTrend_ = other.commentTrend_;
      validPlayCount_ = other.validPlayCount_;
      validPlayCountTrend_ = other.validPlayCountTrend_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreationData Clone() {
      return new CreationData(this);
    }

    /// <summary>Field number for the "view_count" field.</summary>
    public const int ViewCountFieldNumber = 1;
    private int viewCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ViewCount {
      get { return viewCount_; }
      set {
        viewCount_ = value;
      }
    }

    /// <summary>Field number for the "agree_count" field.</summary>
    public const int AgreeCountFieldNumber = 2;
    private int agreeCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AgreeCount {
      get { return agreeCount_; }
      set {
        agreeCount_ = value;
      }
    }

    /// <summary>Field number for the "view_count_trend" field.</summary>
    public const int ViewCountTrendFieldNumber = 3;
    private int viewCountTrend_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ViewCountTrend {
      get { return viewCountTrend_; }
      set {
        viewCountTrend_ = value;
      }
    }

    /// <summary>Field number for the "agree_count_trend" field.</summary>
    public const int AgreeCountTrendFieldNumber = 4;
    private int agreeCountTrend_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AgreeCountTrend {
      get { return agreeCountTrend_; }
      set {
        agreeCountTrend_ = value;
      }
    }

    /// <summary>Field number for the "comment_count" field.</summary>
    public const int CommentCountFieldNumber = 5;
    private int commentCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CommentCount {
      get { return commentCount_; }
      set {
        commentCount_ = value;
      }
    }

    /// <summary>Field number for the "comment_trend" field.</summary>
    public const int CommentTrendFieldNumber = 6;
    private int commentTrend_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CommentTrend {
      get { return commentTrend_; }
      set {
        commentTrend_ = value;
      }
    }

    /// <summary>Field number for the "valid_play_count" field.</summary>
    public const int ValidPlayCountFieldNumber = 7;
    private int validPlayCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ValidPlayCount {
      get { return validPlayCount_; }
      set {
        validPlayCount_ = value;
      }
    }

    /// <summary>Field number for the "valid_play_count_trend" field.</summary>
    public const int ValidPlayCountTrendFieldNumber = 8;
    private int validPlayCountTrend_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ValidPlayCountTrend {
      get { return validPlayCountTrend_; }
      set {
        validPlayCountTrend_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreationData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreationData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ViewCount != other.ViewCount) return false;
      if (AgreeCount != other.AgreeCount) return false;
      if (ViewCountTrend != other.ViewCountTrend) return false;
      if (AgreeCountTrend != other.AgreeCountTrend) return false;
      if (CommentCount != other.CommentCount) return false;
      if (CommentTrend != other.CommentTrend) return false;
      if (ValidPlayCount != other.ValidPlayCount) return false;
      if (ValidPlayCountTrend != other.ValidPlayCountTrend) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ViewCount != 0) hash ^= ViewCount.GetHashCode();
      if (AgreeCount != 0) hash ^= AgreeCount.GetHashCode();
      if (ViewCountTrend != 0) hash ^= ViewCountTrend.GetHashCode();
      if (AgreeCountTrend != 0) hash ^= AgreeCountTrend.GetHashCode();
      if (CommentCount != 0) hash ^= CommentCount.GetHashCode();
      if (CommentTrend != 0) hash ^= CommentTrend.GetHashCode();
      if (ValidPlayCount != 0) hash ^= ValidPlayCount.GetHashCode();
      if (ValidPlayCountTrend != 0) hash ^= ValidPlayCountTrend.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ViewCount != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ViewCount);
      }
      if (AgreeCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(AgreeCount);
      }
      if (ViewCountTrend != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ViewCountTrend);
      }
      if (AgreeCountTrend != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(AgreeCountTrend);
      }
      if (CommentCount != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(CommentCount);
      }
      if (CommentTrend != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(CommentTrend);
      }
      if (ValidPlayCount != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ValidPlayCount);
      }
      if (ValidPlayCountTrend != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(ValidPlayCountTrend);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ViewCount != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ViewCount);
      }
      if (AgreeCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(AgreeCount);
      }
      if (ViewCountTrend != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ViewCountTrend);
      }
      if (AgreeCountTrend != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(AgreeCountTrend);
      }
      if (CommentCount != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(CommentCount);
      }
      if (CommentTrend != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(CommentTrend);
      }
      if (ValidPlayCount != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ValidPlayCount);
      }
      if (ValidPlayCountTrend != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(ValidPlayCountTrend);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ViewCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ViewCount);
      }
      if (AgreeCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AgreeCount);
      }
      if (ViewCountTrend != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ViewCountTrend);
      }
      if (AgreeCountTrend != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AgreeCountTrend);
      }
      if (CommentCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CommentCount);
      }
      if (CommentTrend != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CommentTrend);
      }
      if (ValidPlayCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ValidPlayCount);
      }
      if (ValidPlayCountTrend != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ValidPlayCountTrend);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreationData other) {
      if (other == null) {
        return;
      }
      if (other.ViewCount != 0) {
        ViewCount = other.ViewCount;
      }
      if (other.AgreeCount != 0) {
        AgreeCount = other.AgreeCount;
      }
      if (other.ViewCountTrend != 0) {
        ViewCountTrend = other.ViewCountTrend;
      }
      if (other.AgreeCountTrend != 0) {
        AgreeCountTrend = other.AgreeCountTrend;
      }
      if (other.CommentCount != 0) {
        CommentCount = other.CommentCount;
      }
      if (other.CommentTrend != 0) {
        CommentTrend = other.CommentTrend;
      }
      if (other.ValidPlayCount != 0) {
        ValidPlayCount = other.ValidPlayCount;
      }
      if (other.ValidPlayCountTrend != 0) {
        ValidPlayCountTrend = other.ValidPlayCountTrend;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ViewCount = input.ReadInt32();
            break;
          }
          case 16: {
            AgreeCount = input.ReadInt32();
            break;
          }
          case 24: {
            ViewCountTrend = input.ReadInt32();
            break;
          }
          case 32: {
            AgreeCountTrend = input.ReadInt32();
            break;
          }
          case 40: {
            CommentCount = input.ReadInt32();
            break;
          }
          case 48: {
            CommentTrend = input.ReadInt32();
            break;
          }
          case 56: {
            ValidPlayCount = input.ReadInt32();
            break;
          }
          case 64: {
            ValidPlayCountTrend = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ViewCount = input.ReadInt32();
            break;
          }
          case 16: {
            AgreeCount = input.ReadInt32();
            break;
          }
          case 24: {
            ViewCountTrend = input.ReadInt32();
            break;
          }
          case 32: {
            AgreeCountTrend = input.ReadInt32();
            break;
          }
          case 40: {
            CommentCount = input.ReadInt32();
            break;
          }
          case 48: {
            CommentTrend = input.ReadInt32();
            break;
          }
          case 56: {
            ValidPlayCount = input.ReadInt32();
            break;
          }
          case 64: {
            ValidPlayCountTrend = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
