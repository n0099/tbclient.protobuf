// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Forum/FrsTabInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace TbClient.Forum {

  /// <summary>Holder for reflection information generated from Forum/FrsTabInfo.proto</summary>
  public static partial class FrsTabInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for Forum/FrsTabInfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FrsTabInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZGb3J1bS9GcnNUYWJJbmZvLnByb3RvEg50YkNsaWVudC5mb3J1bSLbAQoK",
            "RnJzVGFiSW5mbxIOCgZ0YWJfaWQYASABKAUSEAoIdGFiX3R5cGUYAiABKAUS",
            "EAoIdGFiX25hbWUYAyABKAkSDwoHdGFiX3VybBgEIAEoCRIPCgd0YWJfZ2lk",
            "GAUgASgJEhEKCXRhYl90aXRsZRgGIAEoCRIWCg5pc19nZW5lcmFsX3RhYhgH",
            "IAEoBRIQCgh0YWJfY29kZRgIIAEoCRITCgt0YWJfdmVyc2lvbhgJIAEoDRIS",
            "Cgppc19kZWZhdWx0GAogASgFEhEKCW5lZWRfcGFnZRgLIAEoBWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::TbClient.Forum.FrsTabInfo), global::TbClient.Forum.FrsTabInfo.Parser, new[]{ "TabId", "TabType", "TabName", "TabUrl", "TabGid", "TabTitle", "IsGeneralTab", "TabCode", "TabVersion", "IsDefault", "NeedPage" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class FrsTabInfo : pb::IMessage<FrsTabInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FrsTabInfo> _parser = new pb::MessageParser<FrsTabInfo>(() => new FrsTabInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FrsTabInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TbClient.Forum.FrsTabInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FrsTabInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FrsTabInfo(FrsTabInfo other) : this() {
      tabId_ = other.tabId_;
      tabType_ = other.tabType_;
      tabName_ = other.tabName_;
      tabUrl_ = other.tabUrl_;
      tabGid_ = other.tabGid_;
      tabTitle_ = other.tabTitle_;
      isGeneralTab_ = other.isGeneralTab_;
      tabCode_ = other.tabCode_;
      tabVersion_ = other.tabVersion_;
      isDefault_ = other.isDefault_;
      needPage_ = other.needPage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FrsTabInfo Clone() {
      return new FrsTabInfo(this);
    }

    /// <summary>Field number for the "tab_id" field.</summary>
    public const int TabIdFieldNumber = 1;
    private int tabId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TabId {
      get { return tabId_; }
      set {
        tabId_ = value;
      }
    }

    /// <summary>Field number for the "tab_type" field.</summary>
    public const int TabTypeFieldNumber = 2;
    private int tabType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TabType {
      get { return tabType_; }
      set {
        tabType_ = value;
      }
    }

    /// <summary>Field number for the "tab_name" field.</summary>
    public const int TabNameFieldNumber = 3;
    private string tabName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TabName {
      get { return tabName_; }
      set {
        tabName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tab_url" field.</summary>
    public const int TabUrlFieldNumber = 4;
    private string tabUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TabUrl {
      get { return tabUrl_; }
      set {
        tabUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tab_gid" field.</summary>
    public const int TabGidFieldNumber = 5;
    private string tabGid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TabGid {
      get { return tabGid_; }
      set {
        tabGid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tab_title" field.</summary>
    public const int TabTitleFieldNumber = 6;
    private string tabTitle_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TabTitle {
      get { return tabTitle_; }
      set {
        tabTitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "is_general_tab" field.</summary>
    public const int IsGeneralTabFieldNumber = 7;
    private int isGeneralTab_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int IsGeneralTab {
      get { return isGeneralTab_; }
      set {
        isGeneralTab_ = value;
      }
    }

    /// <summary>Field number for the "tab_code" field.</summary>
    public const int TabCodeFieldNumber = 8;
    private string tabCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TabCode {
      get { return tabCode_; }
      set {
        tabCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tab_version" field.</summary>
    public const int TabVersionFieldNumber = 9;
    private uint tabVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TabVersion {
      get { return tabVersion_; }
      set {
        tabVersion_ = value;
      }
    }

    /// <summary>Field number for the "is_default" field.</summary>
    public const int IsDefaultFieldNumber = 10;
    private int isDefault_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int IsDefault {
      get { return isDefault_; }
      set {
        isDefault_ = value;
      }
    }

    /// <summary>Field number for the "need_page" field.</summary>
    public const int NeedPageFieldNumber = 11;
    private int needPage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NeedPage {
      get { return needPage_; }
      set {
        needPage_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FrsTabInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FrsTabInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TabId != other.TabId) return false;
      if (TabType != other.TabType) return false;
      if (TabName != other.TabName) return false;
      if (TabUrl != other.TabUrl) return false;
      if (TabGid != other.TabGid) return false;
      if (TabTitle != other.TabTitle) return false;
      if (IsGeneralTab != other.IsGeneralTab) return false;
      if (TabCode != other.TabCode) return false;
      if (TabVersion != other.TabVersion) return false;
      if (IsDefault != other.IsDefault) return false;
      if (NeedPage != other.NeedPage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TabId != 0) hash ^= TabId.GetHashCode();
      if (TabType != 0) hash ^= TabType.GetHashCode();
      if (TabName.Length != 0) hash ^= TabName.GetHashCode();
      if (TabUrl.Length != 0) hash ^= TabUrl.GetHashCode();
      if (TabGid.Length != 0) hash ^= TabGid.GetHashCode();
      if (TabTitle.Length != 0) hash ^= TabTitle.GetHashCode();
      if (IsGeneralTab != 0) hash ^= IsGeneralTab.GetHashCode();
      if (TabCode.Length != 0) hash ^= TabCode.GetHashCode();
      if (TabVersion != 0) hash ^= TabVersion.GetHashCode();
      if (IsDefault != 0) hash ^= IsDefault.GetHashCode();
      if (NeedPage != 0) hash ^= NeedPage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TabId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TabId);
      }
      if (TabType != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TabType);
      }
      if (TabName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TabName);
      }
      if (TabUrl.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TabUrl);
      }
      if (TabGid.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(TabGid);
      }
      if (TabTitle.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(TabTitle);
      }
      if (IsGeneralTab != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(IsGeneralTab);
      }
      if (TabCode.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(TabCode);
      }
      if (TabVersion != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(TabVersion);
      }
      if (IsDefault != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(IsDefault);
      }
      if (NeedPage != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(NeedPage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TabId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TabId);
      }
      if (TabType != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TabType);
      }
      if (TabName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TabName);
      }
      if (TabUrl.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TabUrl);
      }
      if (TabGid.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(TabGid);
      }
      if (TabTitle.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(TabTitle);
      }
      if (IsGeneralTab != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(IsGeneralTab);
      }
      if (TabCode.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(TabCode);
      }
      if (TabVersion != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(TabVersion);
      }
      if (IsDefault != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(IsDefault);
      }
      if (NeedPage != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(NeedPage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TabId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TabId);
      }
      if (TabType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TabType);
      }
      if (TabName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TabName);
      }
      if (TabUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TabUrl);
      }
      if (TabGid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TabGid);
      }
      if (TabTitle.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TabTitle);
      }
      if (IsGeneralTab != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IsGeneralTab);
      }
      if (TabCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TabCode);
      }
      if (TabVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TabVersion);
      }
      if (IsDefault != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IsDefault);
      }
      if (NeedPage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NeedPage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FrsTabInfo other) {
      if (other == null) {
        return;
      }
      if (other.TabId != 0) {
        TabId = other.TabId;
      }
      if (other.TabType != 0) {
        TabType = other.TabType;
      }
      if (other.TabName.Length != 0) {
        TabName = other.TabName;
      }
      if (other.TabUrl.Length != 0) {
        TabUrl = other.TabUrl;
      }
      if (other.TabGid.Length != 0) {
        TabGid = other.TabGid;
      }
      if (other.TabTitle.Length != 0) {
        TabTitle = other.TabTitle;
      }
      if (other.IsGeneralTab != 0) {
        IsGeneralTab = other.IsGeneralTab;
      }
      if (other.TabCode.Length != 0) {
        TabCode = other.TabCode;
      }
      if (other.TabVersion != 0) {
        TabVersion = other.TabVersion;
      }
      if (other.IsDefault != 0) {
        IsDefault = other.IsDefault;
      }
      if (other.NeedPage != 0) {
        NeedPage = other.NeedPage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TabId = input.ReadInt32();
            break;
          }
          case 16: {
            TabType = input.ReadInt32();
            break;
          }
          case 26: {
            TabName = input.ReadString();
            break;
          }
          case 34: {
            TabUrl = input.ReadString();
            break;
          }
          case 42: {
            TabGid = input.ReadString();
            break;
          }
          case 50: {
            TabTitle = input.ReadString();
            break;
          }
          case 56: {
            IsGeneralTab = input.ReadInt32();
            break;
          }
          case 66: {
            TabCode = input.ReadString();
            break;
          }
          case 72: {
            TabVersion = input.ReadUInt32();
            break;
          }
          case 80: {
            IsDefault = input.ReadInt32();
            break;
          }
          case 88: {
            NeedPage = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TabId = input.ReadInt32();
            break;
          }
          case 16: {
            TabType = input.ReadInt32();
            break;
          }
          case 26: {
            TabName = input.ReadString();
            break;
          }
          case 34: {
            TabUrl = input.ReadString();
            break;
          }
          case 42: {
            TabGid = input.ReadString();
            break;
          }
          case 50: {
            TabTitle = input.ReadString();
            break;
          }
          case 56: {
            IsGeneralTab = input.ReadInt32();
            break;
          }
          case 66: {
            TabCode = input.ReadString();
            break;
          }
          case 72: {
            TabVersion = input.ReadUInt32();
            break;
          }
          case 80: {
            IsDefault = input.ReadInt32();
            break;
          }
          case 88: {
            NeedPage = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
