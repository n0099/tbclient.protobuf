<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: Post/Reply.proto

namespace TbClient\Post\Reply;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>tbClient.post.Reply.SignatureData</code>
 */
class SignatureData extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>int32 signature_id = 1;</code>
     */
    protected $signature_id = 0;
    /**
     * Generated from protobuf field <code>string fontKeyName = 2;</code>
     */
    protected $fontKeyName = '';
    /**
     * Generated from protobuf field <code>string fontColor = 3;</code>
     */
    protected $fontColor = '';
    /**
     * Generated from protobuf field <code>repeated .tbClient.post.Reply.SignatureData.SignatureContent content = 4;</code>
     */
    private $content;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $signature_id
     *     @type string $fontKeyName
     *     @type string $fontColor
     *     @type array<\TbClient\Post\Reply\SignatureData\SignatureContent>|\Google\Protobuf\Internal\RepeatedField $content
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Post\Reply::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>int32 signature_id = 1;</code>
     * @return int
     */
    public function getSignatureId()
    {
        return $this->signature_id;
    }

    /**
     * Generated from protobuf field <code>int32 signature_id = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setSignatureId($var)
    {
        GPBUtil::checkInt32($var);
        $this->signature_id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string fontKeyName = 2;</code>
     * @return string
     */
    public function getFontKeyName()
    {
        return $this->fontKeyName;
    }

    /**
     * Generated from protobuf field <code>string fontKeyName = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setFontKeyName($var)
    {
        GPBUtil::checkString($var, True);
        $this->fontKeyName = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string fontColor = 3;</code>
     * @return string
     */
    public function getFontColor()
    {
        return $this->fontColor;
    }

    /**
     * Generated from protobuf field <code>string fontColor = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setFontColor($var)
    {
        GPBUtil::checkString($var, True);
        $this->fontColor = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>repeated .tbClient.post.Reply.SignatureData.SignatureContent content = 4;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getContent()
    {
        return $this->content;
    }

    /**
     * Generated from protobuf field <code>repeated .tbClient.post.Reply.SignatureData.SignatureContent content = 4;</code>
     * @param array<\TbClient\Post\Reply\SignatureData\SignatureContent>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setContent($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \TbClient\Post\Reply\SignatureData\SignatureContent::class);
        $this->content = $arr;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(SignatureData::class, \TbClient\Post\Reply_SignatureData::class);

